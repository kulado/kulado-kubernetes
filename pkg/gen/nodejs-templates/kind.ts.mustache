// *** WARNING: this file was generated by the Kulado Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as inputApi from "../../types/input";
import * as outputApi from "../../types/output";
import { getVersion } from "../../version";

    {{{Comment}}}
    export class {{Kind}} extends kulado.CustomResource {
      {{#Properties}}
      {{{Comment}}}
      public readonly {{Name}}: kulado.Output<{{{PropType}}}>;

      {{/Properties}}
      /**
       * Get the state of an existing `{{Kind}}` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Kulado will keep track of this resource using `name` as the Kulado ID.
       *
       * @param name _Unique_ name used to register this resource with Kulado.
       * @param id An ID for the Kubernetes resource to retrieve. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: kulado.Input<kulado.ID>, opts?: kulado.CustomResourceOptions): {{Kind}} {
          return new {{Kind}}(name, undefined, { ...opts, id: id });
      }

      /** @internal */
      private static readonly __kuladoType = "kubernetes:{{URNAPIVersion}}:{{Kind}}";

      /**
       * Returns true if the given object is an instance of {{Kind}}.  This is designed to work even
       * when multiple copies of the Kulado SDK have been loaded into the same process.
       */
      public static isInstance(obj: any): obj is {{Kind}} {
          if (obj === undefined || obj === null) {
              return false;
          }

          return obj["__kuladoType"] === {{Kind}}.__kuladoType;
      }

      /**
       * Create a {{Group}}.{{Version}}.{{Kind}} resource with the given unique name, arguments, and options.
       *
       * @param name The _unique_ name of the resource.
       * @param args The arguments to use to populate this resource's properties.
       * @param opts A bag of options that control this resource's behavior.
       */
      constructor(name: string, args?: inputApi.{{Group}}.{{Version}}.{{Kind}}, opts?: kulado.CustomResourceOptions) {
          let inputs: kulado.Inputs = {};
          {{#Properties}}
          inputs["{{Name}}"] = {{{DefaultValue}}};
          {{/Properties}}

          if (!opts) {
              opts = {};
          }

          if (!opts.version) {
              opts.version = getVersion();
          }
          super({{Kind}}.__kuladoType, name, inputs, opts);
      }
    }
